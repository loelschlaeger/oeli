[{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"http://loelschlaeger.de/oeli/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"http://loelschlaeger.de/oeli/articles/argument_validation.html","id":"the-match_arg-function","dir":"Articles","previous_headings":"","what":"The match_arg() function","title":"Helpers for argument validation","text":"","code":"match_arg(   arg = \"lo\",   choices = c(\"loooong\", \"else\"),   several.ok = FALSE,   none.ok = FALSE ) #> [1] \"loooong\""},{"path":"http://loelschlaeger.de/oeli/articles/argument_validation.html","id":"the-check_covariance_matrix-function","dir":"Articles","previous_headings":"","what":"The check_covariance_matrix() function","title":"Helpers for argument validation","text":"","code":"check_covariance_matrix(   matrix(c(1, 2, 2, 1), nrow = 2) * -1 ) #> [1] \"Must have positive eigenvalues only\""},{"path":"http://loelschlaeger.de/oeli/articles/argument_validation.html","id":"the-check_correlation_matrix-function","dir":"Articles","previous_headings":"","what":"The check_correlation_matrix() function","title":"Helpers for argument validation","text":"","code":"check_correlation_matrix(   matrix(c(1, 0, 0, 0), nrow = 2) ) #> [1] \"Must have ones on the diagonal\""},{"path":"http://loelschlaeger.de/oeli/articles/argument_validation.html","id":"the-check_transition_probability_matrix-function","dir":"Articles","previous_headings":"","what":"The check_transition_probability_matrix() function","title":"Helpers for argument validation","text":"","code":"check_correlation_matrix(   matrix(c(1, 1, 0, 1), nrow = 2) ) #> [1] \"Must be symmetric\""},{"path":"http://loelschlaeger.de/oeli/articles/argument_validation.html","id":"the-check_probability_vector-function","dir":"Articles","previous_headings":"","what":"The check_probability_vector() function","title":"Helpers for argument validation","text":"","code":"check_probability_vector(   1:5 / sum(1:5),   len = 4 ) #> [1] \"Must have length 4, but has length 5\""},{"path":"http://loelschlaeger.de/oeli/articles/data_frame_helpers.html","id":"delete-data-frame-columns","dir":"Articles","previous_headings":"","what":"Delete data.frame columns","title":"Helpers for working with data frames","text":"","code":"df <- data.frame(\"label\" = c(\"A\", \"B\"), \"number\" = 1:10) delete_data_frame_columns(df = df, column_names = \"label\") #>    number #> 1       1 #> 2       2 #> 3       3 #> 4       4 #> 5       5 #> 6       6 #> 7       7 #> 8       8 #> 9       9 #> 10     10 delete_data_frame_columns(df = df, column_names = \"number\") #>    label #> 1      A #> 2      B #> 3      A #> 4      B #> 5      A #> 6      B #> 7      A #> 8      B #> 9      A #> 10     B delete_data_frame_columns(df = df, column_names = c(\"label\", \"number\")) #> data frame with 0 columns and 10 rows"},{"path":"http://loelschlaeger.de/oeli/articles/data_frame_helpers.html","id":"group-a-data-frame","dir":"Articles","previous_headings":"","what":"Group a data.frame","title":"Helpers for working with data frames","text":"","code":"df <- data.frame(\"label\" = c(\"A\", \"B\"), \"number\" = 1:10) group_data_frame(df = df, by = \"label\") #> $A #>   label number #> 1     A      1 #> 3     A      3 #> 5     A      5 #> 7     A      7 #> 9     A      9 #>  #> $B #>    label number #> 2      B      2 #> 4      B      4 #> 6      B      6 #> 8      B      8 #> 10     B     10 group_data_frame(df = df, by = \"label\", keep_by = FALSE) #> $A #>   number #> 1      1 #> 3      3 #> 5      5 #> 7      7 #> 9      9 #>  #> $B #>    number #> 2       2 #> 4       4 #> 6       6 #> 8       8 #> 10     10"},{"path":"http://loelschlaeger.de/oeli/articles/matrix_helpers.html","id":"print-matrices","dir":"Articles","previous_headings":"","what":"Print matrices","title":"Helpers for working with matrices","text":"print_matrix() function prints (possibly abbreviated) matrix:","code":"print_matrix(x = 1, label = \"single numeric\") #> single numeric : 1 print_matrix(x = LETTERS[1:26], label = \"letters\") #> letters : character vector of length 26  #> A B C ... Z print_matrix(x = 1:3, coldots = 2) #> double vector of length 3  #> 1 ... 3 print_matrix(x = matrix(rnorm(99), ncol = 1), label = \"single column matrix\") #> single column matrix : 99 x 1 matrix of doubles  #>        [,1] #> [1,]  -1.71 #> [2,]   0.05 #> [3,]    1.3 #> ...     ... #> [99,]  0.76 print_matrix(x = matrix(1:100, nrow = 1), label = \"single row matrix\") #> single row matrix : 1 x 100 matrix of doubles  #>      [,1] [,2] [,3] ... [,100] #> [1,]    1    2    3 ...    100 print_matrix(x = matrix(LETTERS[1:24], ncol = 6), label = \"big matrix\") #> big matrix : 4 x 6 matrix of characters  #>      [,1] [,2] [,3] ... [,6] #> [1,]    A    E    I ...    U #> [2,]    B    F    J ...    V #> [3,]    C    G    K ...    W #> [4,]    D    H    L ...    X print_matrix(x = diag(5), coldots = 2, rowdots = 2, simplify = TRUE) #> [ 1 ... 0; ... ... ...; 0 ... 1 ]"},{"path":"http://loelschlaeger.de/oeli/articles/matrix_helpers.html","id":"get-matrix-indices","dir":"Articles","previous_headings":"","what":"Get matrix indices","title":"Helpers for working with matrices","text":"matrix_indices() function returns matrix indices character:","code":"M <- diag(3) matrix_indices(M) #> [1] \"11\" \"21\" \"31\" \"12\" \"22\" \"32\" \"13\" \"23\" \"33\" matrix_indices(M, \"M_\") #> [1] \"M_11\" \"M_21\" \"M_31\" \"M_12\" \"M_22\" \"M_32\" \"M_13\" \"M_23\" \"M_33\" matrix_indices(M, \"M_\", TRUE) #> [1] \"M_21\" \"M_31\" \"M_12\" \"M_32\" \"M_13\" \"M_23\""},{"path":"http://loelschlaeger.de/oeli/articles/matrix_helpers.html","id":"add-matrix-column","dir":"Articles","previous_headings":"","what":"Add matrix column","title":"Helpers for working with matrices","text":"insert_matrix_column() function can add column matrix:","code":"A <- diag(3) x <- numeric(3) insert_matrix_column(A, x, 0) #>      [,1] [,2] [,3] [,4] #> [1,]    0    1    0    0 #> [2,]    0    0    1    0 #> [3,]    0    0    0    1 insert_matrix_column(A, x, 1) #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #> [2,]    0    0    1    0 #> [3,]    0    0    0    1 insert_matrix_column(A, x, 2) #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #> [2,]    0    1    0    0 #> [3,]    0    0    0    1 insert_matrix_column(A, x, 3) #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #> [2,]    0    1    0    0 #> [3,]    0    0    1    0"},{"path":"http://loelschlaeger.de/oeli/articles/storage_helpers.html","id":"the-storage-object","dir":"Articles","previous_headings":"","what":"The Storage object","title":"Helpers for storage of data","text":"","code":"### 1. Create a `Storage` object: my_storage <- Storage$new()  # 2. Add elements along with identifiers: my_storage$   add(42, c(\"number\", \"rational\"))$   add(pi, c(\"number\", \"!rational\"))$   add(\"fear of black cats\", c(\"text\", \"!rational\"))$   add(\"wearing a seat belt\", c(\"text\", \"rational\"))$   add(mean, \"function\")  # 3. What elements are stored? print(my_storage) #> number of elements: 5  #> identifiers used: number rational text function  # 4. Extract elements based on identifiers: my_storage$get(\"rational\") #> [[1]] #> [1] 42 #>  #> [[2]] #> [1] \"wearing a seat belt\" my_storage$get(\"!rational\") #> [[1]] #> [1] 3.141593 #>  #> [[2]] #> [1] \"fear of black cats\" my_storage$get(c(\"text\", \"!rational\")) #> [[1]] #> [1] \"fear of black cats\" my_storage$get(\"all\") # get all elements #> [[1]] #> [1] 42 #>  #> [[2]] #> [1] 3.141593 #>  #> [[3]] #> [1] \"fear of black cats\" #>  #> [[4]] #> [1] \"wearing a seat belt\" #>  #> [[5]] #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x5564c90d3408> #> <environment: namespace:base> my_storage$get(c(\"text\", \"!text\")) #> list() my_storage$get(c(\"text\", \"!text\"), logical = \"or\") #> [[1]] #> [1] 42 #>  #> [[2]] #> [1] 3.141593 #>  #> [[3]] #> [1] \"fear of black cats\" #>  #> [[4]] #> [1] \"wearing a seat belt\" #>  #> [[5]] #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x5564c90d3408> #> <environment: namespace:base>  # 5. Extract elements based on ids: my_storage$get(ids = 4:5) #> [[1]] #> [1] \"wearing a seat belt\" #>  #> [[2]] #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x5564c90d3408> #> <environment: namespace:base> my_storage$get(ids = 4:5, id_names = TRUE) # add the ids as names #> $`4` #> [1] \"wearing a seat belt\" #>  #> $`5` #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x5564c90d3408> #> <environment: namespace:base>"},{"path":"http://loelschlaeger.de/oeli/articles/vector_helpers.html","id":"split-vector-into-chunks","dir":"Articles","previous_headings":"","what":"Split vector into chunks","title":"Helpers for working with vectors","text":"Say want split vector three chunks equal size: Alternatively, can split x chunks size n = 3 setting type = 2: somehow also works n multiple length(x): prevent “odd” cases, set strict = TRUE:","code":"x <- 1:6 chunk_vector(x, n = 3) #> $`1` #> [1] 1 2 #>  #> $`2` #> [1] 3 4 #>  #> $`3` #> [1] 5 6 chunk_vector(x, n = 3, type = 2) #> $`1` #> [1] 1 2 3 #>  #> $`2` #> [1] 4 5 6 x <- 1:7 chunk_vector(x, n = 3) #> $`1` #> [1] 1 2 3 #>  #> $`2` #> [1] 4 5 #>  #> $`3` #> [1] 6 7 chunk_vector(x, n = 3, type = 2) #> $`1` #> [1] 1 2 3 #>  #> $`2` #> [1] 4 5 6 #>  #> $`3` #> [1] 7 try(chunk_vector(1:7, n = 3, strict = TRUE)) #> Error in chunk_vector(1:7, n = 3, strict = TRUE) :  #>   'n' is not a multiple of 'length(x)'"},{"path":"http://loelschlaeger.de/oeli/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lennart Oelschläger. Author, maintainer.","code":""},{"path":"http://loelschlaeger.de/oeli/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Oelschläger L (2024). oeli: Utilities Developing Data Science Software. R package version 0.4.1.9001, http://loelschlaeger.de/oeli/, https://github.com/loelschlaeger/oeli.","code":"@Manual{,   title = {oeli: My Utilities for Developing Data Science Software},   author = {Lennart Oelschläger},   year = {2024},   note = {R package version 0.4.1.9001, http://loelschlaeger.de/oeli/},   url = {https://github.com/loelschlaeger/oeli}, }"},{"path":"http://loelschlaeger.de/oeli/index.html","id":"my-utilities-for-developing-r-software-","dir":"","previous_headings":"","what":"Utilities for Developing R Software","title":"Utilities for Developing R Software","text":"R package contains general utilities maybe others find useful developing data science software: argument validation user interaction timed evaluations calculating density values sampling densities catching exceptions working data common objects data frames matrices vectors dates functions arguments lists storing data helpers building R package","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary R6 Object — Dictionary","title":"Dictionary R6 Object — Dictionary","text":"Provides simple key-value interface based R6.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Dictionary R6 Object — Dictionary","text":"keys character vector available keys. alias list available keys per alias value.","code":""},{"path":[]},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dictionary R6 Object — Dictionary","text":"Dictionary$new() Dictionary$add() Dictionary$get() Dictionary$remove() Dictionary$print()","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dictionary R6 Object — Dictionary","text":"initializing Dictionary object","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dictionary R6 Object — Dictionary","text":"","code":"Dictionary$new(   key_name,   alias_name = NULL,   value_names = character(),   value_assert = alist(),   allow_overwrite = TRUE,   keys_reserved = character(),   alias_choices = NULL,   dictionary_name = NULL )"},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dictionary R6 Object — Dictionary","text":"key_name single character, name key variable. alias_name Optionally single character, name alias variable. Can also NULL (default) alias. value_names character (vector), names values connected key. value_assert alist check functions supplied values. element value_names, values_assert can identically named element form checkmate::assert_*(...), ... can arguments assertion function except x argument. allow_overwrite Either TRUE (default) allow overwriting existing keys new values, FALSE else. Duplicate keys never allowed. keys_reserved character (vector) names must used keys. alias_choices Optionally character vector possible values alias. Can also NULL, alias values allowed. dictionary_name Optionally single character, name dictionary.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dictionary R6 Object — Dictionary","text":"new Dictionary object","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"method-add-","dir":"Reference","previous_headings":"","what":"Method add()","title":"Dictionary R6 Object — Dictionary","text":"adding element","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dictionary R6 Object — Dictionary","text":"","code":"Dictionary$add(...)"},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dictionary R6 Object — Dictionary","text":"... Values key variable key_name (must single character), alias variable alias_name (optionally, must character vector), variables specified value_names (, must comply value_assert checks).","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dictionary R6 Object — Dictionary","text":"invisibly Dictionary object","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"Dictionary R6 Object — Dictionary","text":"getting elements","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dictionary R6 Object — Dictionary","text":"","code":"Dictionary$get(key, value = NULL)"},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dictionary R6 Object — Dictionary","text":"key single character, value key variable key_name. Use $keys method available keys. value Optionally single character, one elements value_names, selecting required value. Can also NULL (default) values connected key, returned list.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dictionary R6 Object — Dictionary","text":"selected value","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"method-remove-","dir":"Reference","previous_headings":"","what":"Method remove()","title":"Dictionary R6 Object — Dictionary","text":"removing elements (associated alias, )","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dictionary R6 Object — Dictionary","text":"","code":"Dictionary$remove(key)"},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dictionary R6 Object — Dictionary","text":"key single character, value key variable key_name. Use $keys method available keys.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dictionary R6 Object — Dictionary","text":"invisibly Dictionary object","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Dictionary R6 Object — Dictionary","text":"printing details dictionary","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dictionary R6 Object — Dictionary","text":"","code":"Dictionary$print()"},{"path":"http://loelschlaeger.de/oeli/reference/Dictionary.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dictionary R6 Object — Dictionary","text":"invisibly Dictionary object","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":null,"dir":"Reference","previous_headings":"","what":"Storage R6 Object — Storage","title":"Storage R6 Object — Storage","text":"Provides simple indexing interface list elements based R6. Basically, allows store items list regain based identifiers defined user.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Storage R6 Object — Storage","text":"output depends method: $new() returns Storage object. $add(), $remove(), $print() invisibly return Storage object (allow method chaining) $get() returns requested element(s) $number() returns integer $indices() return integer vector","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"setting-identifiers","dir":"Reference","previous_headings":"","what":"Setting identifiers","title":"Storage R6 Object — Storage","text":"identifier character, typically binary property. Identifiers can negated placing exclamation mark (\"!\") front . Identifiers assigned elements previously need specified new elements; instead, default value can used. default value can defined either globally cases (via $missing_identifier field) separately specific case (via method argument).","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"user-confirmation","dir":"Reference","previous_headings":"","what":"User confirmation","title":"Storage R6 Object — Storage","text":"desired, user can asked confirmation adding, extracting, removing elements using identifiers. behavior can set globally $confirm field customized separately specific case via method argument.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Storage R6 Object — Storage","text":"identifier character vector, identifiers used confirm setting default value confirmations (either TRUE FALSE) missing_identifier setting default value specified identifiers (either TRUE, FALSE, NA) hide_warnings either TRUE hide warnings (example unknown identifiers selected) FALSE (default), else","code":""},{"path":[]},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Storage R6 Object — Storage","text":"Storage$new() Storage$add() Storage$get() Storage$remove() Storage$number() Storage$indices() Storage$print()","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Storage R6 Object — Storage","text":"initializing Storage object","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Storage R6 Object — Storage","text":"","code":"Storage$new()"},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Storage R6 Object — Storage","text":"new Storage object","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"method-add-","dir":"Reference","previous_headings":"","what":"Method add()","title":"Storage R6 Object — Storage","text":"adding element","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Storage R6 Object — Storage","text":"","code":"Storage$add(   x,   identifier,   confirm = interactive() & self$confirm,   missing_identifier = self$missing_identifier )"},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Storage R6 Object — Storage","text":"x object saved identifier character vector one identifiers (identifier \"\" reserved select elements) confirm either TRUE prompted confirmation, FALSE else missing_identifier logical value specified identifiers (either NA, TRUE, FALSE)","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Storage R6 Object — Storage","text":"invisibly Storage object","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"Storage R6 Object — Storage","text":"getting elements","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Storage R6 Object — Storage","text":"","code":"Storage$get(   identifier = character(),   ids = integer(),   logical = \"and\",   confirm = interactive() & self$confirm,   missing_identifier = self$missing_identifier,   id_names = FALSE )"},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Storage R6 Object — Storage","text":"identifier character vector one identifiers (identifier \"\" reserved select elements) ids integer vector one ids logical case multiple identifiers selected, combined? options : \"\" (default): identifiers combined logical (identifiers must true) \"\": identifiers combined logical (least one identifier must true) confirm either TRUE prompted confirmation, FALSE else missing_identifier logical value specified identifiers (either NA, TRUE, FALSE) id_names either TRUE name elements according ids FALSE ","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Storage R6 Object — Storage","text":"selected object(s)","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"method-remove-","dir":"Reference","previous_headings":"","what":"Method remove()","title":"Storage R6 Object — Storage","text":"removing elements","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Storage R6 Object — Storage","text":"","code":"Storage$remove(   identifier = character(),   ids = integer(),   logical = \"and\",   confirm = interactive() & self$confirm,   missing_identifier = self$missing_identifier,   shift_ids = TRUE )"},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Storage R6 Object — Storage","text":"identifier character vector one identifiers (identifier \"\" reserved select elements) ids integer vector one ids logical case multiple identifiers selected, combined? options : \"\" (default): identifiers combined logical (identifiers must true) \"\": identifiers combined logical (least one identifier must true) confirm either TRUE prompted confirmation, FALSE else missing_identifier logical value specified identifiers (either NA, TRUE, FALSE) shift_ids either TRUE shift ids -elements removed, TRUE keep ids","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Storage R6 Object — Storage","text":"invisibly Storage object","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"method-number-","dir":"Reference","previous_headings":"","what":"Method number()","title":"Storage R6 Object — Storage","text":"computing number identified elements","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Storage R6 Object — Storage","text":"","code":"Storage$number(   identifier = \"all\",   missing_identifier = self$missing_identifier,   logical = \"and\",   confirm = FALSE )"},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Storage R6 Object — Storage","text":"identifier character vector one identifiers (identifier \"\" reserved select elements) missing_identifier logical value specified identifiers (either NA, TRUE, FALSE) logical case multiple identifiers selected, combined? options : \"\" (default): identifiers combined logical (identifiers must true) \"\": identifiers combined logical (least one identifier must true) confirm either TRUE prompted confirmation, FALSE else","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Storage R6 Object — Storage","text":"integer","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"method-indices-","dir":"Reference","previous_headings":"","what":"Method indices()","title":"Storage R6 Object — Storage","text":"returning indices based defined identifiers","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Storage R6 Object — Storage","text":"","code":"Storage$indices(   identifier = \"all\",   logical = \"and\",   confirm = interactive() & self$confirm )"},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Storage R6 Object — Storage","text":"identifier character vector one identifiers (identifier \"\" reserved select elements) logical case multiple identifiers selected, combined? options : \"\" (default): identifiers combined logical (identifiers must true) \"\": identifiers combined logical (least one identifier must true) confirm either TRUE prompted confirmation, FALSE else","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Storage R6 Object — Storage","text":"integer vector","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Storage R6 Object — Storage","text":"printing details saved elements","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Storage R6 Object — Storage","text":"","code":"Storage$print(...)"},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Storage R6 Object — Storage","text":"... currently used","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Storage R6 Object — Storage","text":"invisibly Storage object","code":""},{"path":"http://loelschlaeger.de/oeli/reference/Storage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Storage R6 Object — Storage","text":"","code":"### 1. Create a `Storage` object: my_storage <- Storage$new()  # 2. Add elements along with identifiers: my_storage$   add(42, c(\"number\", \"rational\"))$   add(pi, c(\"number\", \"!rational\"))$   add(\"fear of black cats\", c(\"text\", \"!rational\"))$   add(\"wearing a seat belt\", c(\"text\", \"rational\"))$   add(mean, \"function\")  # 3. What elements are stored? print(my_storage) #> number of elements: 5  #> identifiers used: number rational text function   # 4. Extract elements based on identifiers: my_storage$get(\"rational\") #> [[1]] #> [1] 42 #>  #> [[2]] #> [1] \"wearing a seat belt\" #>  my_storage$get(\"!rational\") #> [[1]] #> [1] 3.141593 #>  #> [[2]] #> [1] \"fear of black cats\" #>  my_storage$get(c(\"text\", \"!rational\")) #> [[1]] #> [1] \"fear of black cats\" #>  my_storage$get(\"all\") # get all elements #> [[1]] #> [1] 42 #>  #> [[2]] #> [1] 3.141593 #>  #> [[3]] #> [1] \"fear of black cats\" #>  #> [[4]] #> [1] \"wearing a seat belt\" #>  #> [[5]] #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x555df97f3520> #> <environment: namespace:base> #>  my_storage$get(c(\"text\", \"!text\")) #> list() my_storage$get(c(\"text\", \"!text\"), logical = \"or\") #> [[1]] #> [1] 42 #>  #> [[2]] #> [1] 3.141593 #>  #> [[3]] #> [1] \"fear of black cats\" #>  #> [[4]] #> [1] \"wearing a seat belt\" #>  #> [[5]] #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x555df97f3520> #> <environment: namespace:base> #>   # 5. Extract elements based on ids: my_storage$get(ids = 4:5) #> [[1]] #> [1] \"wearing a seat belt\" #>  #> [[2]] #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x555df97f3520> #> <environment: namespace:base> #>  my_storage$get(ids = 4:5, id_names = TRUE) # add the ids as names #> $`4` #> [1] \"wearing a seat belt\" #>  #> $`5` #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x555df97f3520> #> <environment: namespace:base> #>"},{"path":"http://loelschlaeger.de/oeli/reference/basic_package_sticker.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating and initializing a basic package sticker — basic_package_sticker","title":"Creating and initializing a basic package sticker — basic_package_sticker","text":"function sets basic package sticker. sticker white background package name (without curly brackets) center. font size package name scaled fits inside sticker. Type ?oeli see example.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/basic_package_sticker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating and initializing a basic package sticker — basic_package_sticker","text":"","code":"basic_package_sticker(package_name, brackets = TRUE)"},{"path":"http://loelschlaeger.de/oeli/reference/basic_package_sticker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating and initializing a basic package sticker — basic_package_sticker","text":"package_name character, package name. brackets Either TRUE curly brackets around package name (default) FALSE .","code":""},{"path":"http://loelschlaeger.de/oeli/reference/basic_package_sticker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating and initializing a basic package sticker — basic_package_sticker","text":"return value, runs use_logo end.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_correlation_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an argument is a correlation matrix — check_correlation_matrix","title":"Check if an argument is a correlation matrix — check_correlation_matrix","text":"function checks whether input symmetric, real matrix fulfills correlation matrix properties.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_correlation_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an argument is a correlation matrix — check_correlation_matrix","text":"","code":"check_correlation_matrix(x, dim = NULL, tolerance = sqrt(.Machine$double.eps))  assert_correlation_matrix(   x,   dim = NULL,   tolerance = sqrt(.Machine$double.eps),   .var.name = checkmate::vname(x),   add = NULL )  test_correlation_matrix(x, dim = NULL, tolerance = sqrt(.Machine$double.eps))"},{"path":"http://loelschlaeger.de/oeli/reference/check_correlation_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an argument is a correlation matrix — check_correlation_matrix","text":"x Object check. dim integer, matrix dimension. tolerance non-negative numeric tolerance value. .var.name [character(1)] Name checked object print assertions. Defaults heuristic implemented vname. add [AssertCollection] Collection store assertion messages. See AssertCollection.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_correlation_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an argument is a correlation matrix — check_correlation_matrix","text":"Compare check_matrix.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_covariance_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an argument is a covariance matrix — check_covariance_matrix","title":"Check if an argument is a covariance matrix — check_covariance_matrix","text":"function checks whether input symmetric, real matrix fulfills covariance matrix properties.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_covariance_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an argument is a covariance matrix — check_covariance_matrix","text":"","code":"check_covariance_matrix(x, dim = NULL, tolerance = sqrt(.Machine$double.eps))  assert_covariance_matrix(   x,   dim = NULL,   tolerance = sqrt(.Machine$double.eps),   .var.name = checkmate::vname(x),   add = NULL )  test_covariance_matrix(x, dim = NULL, tolerance = sqrt(.Machine$double.eps))"},{"path":"http://loelschlaeger.de/oeli/reference/check_covariance_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an argument is a covariance matrix — check_covariance_matrix","text":"x Object check. dim integer, matrix dimension. tolerance non-negative numeric tolerance value. .var.name [character(1)] Name checked object print assertions. Defaults heuristic implemented vname. add [AssertCollection] Collection store assertion messages. See AssertCollection.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_covariance_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an argument is a covariance matrix — check_covariance_matrix","text":"Compare check_matrix.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Check date format — check_date","title":"Check date format — check_date","text":"function checks input date format \"YYYY-MM-DD\".","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check date format — check_date","text":"","code":"check_date(date)"},{"path":"http://loelschlaeger.de/oeli/reference/check_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check date format — check_date","text":"date character, specifying date format \"YYYY-MM-DD\".","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check date format — check_date","text":".Date(date) date format \"YYYY-MM-DD\". Otherwise, function throws error.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check date format — check_date","text":"","code":"check_date(date = \"2000-01-01\") #> [1] \"2000-01-01\""},{"path":"http://loelschlaeger.de/oeli/reference/check_list_of_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an argument is a list of lists — check_list_of_lists","title":"Check if an argument is a list of lists — check_list_of_lists","text":"function checks whether input list contains list elements.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_list_of_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an argument is a list of lists — check_list_of_lists","text":"","code":"check_list_of_lists(x, len = NULL)  assert_list_of_lists(   x,   len = NULL,   .var.name = checkmate::vname(x),   add = NULL )  test_list_of_lists(x, len = NULL)"},{"path":"http://loelschlaeger.de/oeli/reference/check_list_of_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an argument is a list of lists — check_list_of_lists","text":"x Object check. len [integer(1)] Exact expected length x. .var.name [character(1)] Name checked object print assertions. Defaults heuristic implemented vname. add [AssertCollection] Collection store assertion messages. See AssertCollection.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_list_of_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an argument is a list of lists — check_list_of_lists","text":"Compare check_list.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_numeric_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an argument is a numeric vector — check_numeric_vector","title":"Check if an argument is a numeric vector — check_numeric_vector","text":"function checks whether input numeric vector.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_numeric_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an argument is a numeric vector — check_numeric_vector","text":"","code":"check_numeric_vector(   x,   lower = -Inf,   upper = Inf,   finite = FALSE,   any.missing = TRUE,   all.missing = TRUE,   len = NULL,   min.len = NULL,   max.len = NULL,   unique = FALSE,   sorted = FALSE,   names = NULL,   typed.missing = FALSE,   null.ok = FALSE )  assert_numeric_vector(   x,   lower = -Inf,   upper = Inf,   finite = FALSE,   any.missing = TRUE,   all.missing = TRUE,   len = NULL,   min.len = NULL,   max.len = NULL,   unique = FALSE,   sorted = FALSE,   names = NULL,   typed.missing = FALSE,   null.ok = FALSE,   .var.name = checkmate::vname(x),   add = NULL )  test_numeric_vector(   x,   lower = -Inf,   upper = Inf,   finite = FALSE,   any.missing = TRUE,   all.missing = TRUE,   len = NULL,   min.len = NULL,   max.len = NULL,   unique = FALSE,   sorted = FALSE,   names = NULL,   typed.missing = FALSE,   null.ok = FALSE )"},{"path":"http://loelschlaeger.de/oeli/reference/check_numeric_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an argument is a numeric vector — check_numeric_vector","text":"x Object check. lower [numeric(1)] Lower value elements x must greater equal . upper [numeric(1)] Upper value elements x must lower equal . finite [logical(1)] Check finite values? Default FALSE. .missing [logical(1)] vectors missing values allowed? Default TRUE. .missing [logical(1)] vectors non-missing values allowed? Default TRUE. Note empty vectors non-missing values. len [integer(1)] Exact expected length x. min.len [integer(1)] Minimal length x. max.len [integer(1)] Maximal length x. unique [logical(1)] Must values unique? Default FALSE. sorted [logical(1)] Elements must sorted ascending order. Missing values ignored. names [character(1)] Check names. See checkNamed possible values. Default “” performs check . Note can use checkSubset check specific set names. typed.missing [logical(1)] set FALSE (default), types missing values (NA, NA_integer_, NA_real_, NA_character_ NA_character_) well empty vectors allowed type-checking atomic input. Set TRUE enable strict type checking. null.ok [logical(1)] set TRUE, x may also NULL. case type check x performed, additional checks disabled. .var.name [character(1)] Name checked object print assertions. Defaults heuristic implemented vname. add [AssertCollection] Collection store assertion messages. See AssertCollection.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_numeric_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an argument is a numeric vector — check_numeric_vector","text":"Compare check_numeric.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_probability_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an argument is a probability vector — check_probability_vector","title":"Check if an argument is a probability vector — check_probability_vector","text":"function checks whether input real vector non-negative entries add one.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_probability_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an argument is a probability vector — check_probability_vector","text":"","code":"check_probability_vector(x, len = NULL, tolerance = sqrt(.Machine$double.eps))  assert_probability_vector(   x,   len = NULL,   tolerance = sqrt(.Machine$double.eps),   .var.name = checkmate::vname(x),   add = NULL )  test_probability_vector(x, len = NULL, tolerance = sqrt(.Machine$double.eps))"},{"path":"http://loelschlaeger.de/oeli/reference/check_probability_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an argument is a probability vector — check_probability_vector","text":"x Object check. len [integer(1)] Exact expected length x. tolerance non-negative numeric tolerance value. .var.name [character(1)] Name checked object print assertions. Defaults heuristic implemented vname. add [AssertCollection] Collection store assertion messages. See AssertCollection.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_probability_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an argument is a probability vector — check_probability_vector","text":"Compare check_numeric.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_transition_probability_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an argument is a transition probability matrix — check_transition_probability_matrix","title":"Check if an argument is a transition probability matrix — check_transition_probability_matrix","text":"function checks whether input quadratic, real matrix elements 0 1 row sums equal 1.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_transition_probability_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an argument is a transition probability matrix — check_transition_probability_matrix","text":"","code":"check_transition_probability_matrix(   x,   dim = NULL,   tolerance = sqrt(.Machine$double.eps) )  assert_transition_probability_matrix(   x,   dim = NULL,   tolerance = sqrt(.Machine$double.eps),   .var.name = checkmate::vname(x),   add = NULL )  test_transition_probability_matrix(   x,   dim = NULL,   tolerance = sqrt(.Machine$double.eps) )"},{"path":"http://loelschlaeger.de/oeli/reference/check_transition_probability_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an argument is a transition probability matrix — check_transition_probability_matrix","text":"x Object check. dim integer, matrix dimension. tolerance non-negative numeric tolerance value. .var.name [character(1)] Name checked object print assertions. Defaults heuristic implemented vname. add [AssertCollection] Collection store assertion messages. See AssertCollection.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/check_transition_probability_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an argument is a transition probability matrix — check_transition_probability_matrix","text":"Compare check_matrix.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/chunk_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a vector into chunks — chunk_vector","title":"Split a vector into chunks — chunk_vector","text":"function either splits vector n chunks equal size (type = 1), splits vector chunks size n (type = 2).","code":""},{"path":"http://loelschlaeger.de/oeli/reference/chunk_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a vector into chunks — chunk_vector","text":"","code":"chunk_vector(x, n, type = 1, strict = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/chunk_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a vector into chunks — chunk_vector","text":"x vector. n integer smaller equal length(x). type Either 1 (default) split x n chunks equal size 2 split x chunks size n. strict Set TRUE fail length(x) multiple n, FALSE (default), else.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/chunk_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a vector into chunks — chunk_vector","text":"list.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/chunk_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a vector into chunks — chunk_vector","text":"","code":"x <- 1:12 chunk_vector(x, n = 3, type = 1) #> $`1` #> [1] 1 2 3 4 #>  #> $`2` #> [1] 5 6 7 8 #>  #> $`3` #> [1]  9 10 11 12 #>  chunk_vector(x, n = 3, type = 2) #> $`1` #> [1] 1 2 3 #>  #> $`2` #> [1] 4 5 6 #>  #> $`3` #> [1] 7 8 9 #>  #> $`4` #> [1] 10 11 12 #>  try(chunk_vector(x, n = 5, strict = TRUE)) #> Error in chunk_vector(x, n = 5, strict = TRUE) :  #>   'n' is not a multiple of 'length(x)'"},{"path":"http://loelschlaeger.de/oeli/reference/cov_2_chol.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Cholesky root elements and build covariance matrix — cov_2_chol","title":"Get Cholesky root elements and build covariance matrix — cov_2_chol","text":"functions compute Cholesky root elements covariance matrix , conversely, build covariance matrix Cholesky root elements.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/cov_2_chol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Cholesky root elements and build covariance matrix — cov_2_chol","text":"","code":"cov_2_chol(cov, unique = TRUE)  chol_2_cov(chol)  unique_chol(chol)"},{"path":"http://loelschlaeger.de/oeli/reference/cov_2_chol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Cholesky root elements and build covariance matrix — cov_2_chol","text":"cov covariance matrix dimension dim. unique Set TRUE ensure Cholesky decomposition unique restricting diagonal elements positive. chol numeric vector Cholesky root elements.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/cov_2_chol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Cholesky root elements and build covariance matrix — cov_2_chol","text":"cov_2_chol numeric  vector Cholesky root elements. chol_2_cov covariance matrix.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/cov_2_chol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Cholesky root elements and build covariance matrix — cov_2_chol","text":"","code":"cov <- sample_covariance_matrix(4) chol <- cov_2_chol(cov) all.equal(cov, chol_2_cov(chol)) #> [1] TRUE"},{"path":"http://loelschlaeger.de/oeli/reference/ddirichlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute density of Dirichlet distribution — ddirichlet","title":"Compute density of Dirichlet distribution — ddirichlet","text":"function computes density Dirichlet distribution.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/ddirichlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute density of Dirichlet distribution — ddirichlet","text":"","code":"ddirichlet(x, concentration, log = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/ddirichlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute density of Dirichlet distribution — ddirichlet","text":"x numeric, weight vector length p. vector element must 0 1. sum vector elements must 1. concentration numeric, concentration vector length p. log logical, TRUE logarithm density value returned. default, log = FALSE.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/ddirichlet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute density of Dirichlet distribution — ddirichlet","text":"numeric, density value.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/ddirichlet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute density of Dirichlet distribution — ddirichlet","text":"","code":"x <- c(0.5, 0.3, 0.2) concentration <- 1:3 ddirichlet(x = x, concentration = concentration) #> [1] 0.72 ddirichlet(x = x, concentration = concentration, log = TRUE) #> [1] -0.3285041"},{"path":"http://loelschlaeger.de/oeli/reference/ddirichlet_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute density of Dirichlet distribution — ddirichlet_cpp","title":"Compute density of Dirichlet distribution — ddirichlet_cpp","text":"function computes density Dirichlet distribution.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/ddirichlet_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute density of Dirichlet distribution — ddirichlet_cpp","text":"","code":"ddirichlet_cpp(x, concentration, log = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/ddirichlet_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute density of Dirichlet distribution — ddirichlet_cpp","text":"x numeric, weight vector length p. vector element must 0 1. sum vector elements must 1. concentration numeric, concentration vector length p. log logical, TRUE logarithm density value returned. default, log = FALSE.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/ddirichlet_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute density of Dirichlet distribution — ddirichlet_cpp","text":"numeric, density value.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/ddirichlet_cpp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute density of Dirichlet distribution — ddirichlet_cpp","text":"function performs input checks. See ddirichlet version input checks.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/delete_data_frame_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Deleting data.frame columns — delete_data_frame_columns","title":"Deleting data.frame columns — delete_data_frame_columns","text":"function deletes columns data.frame name.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/delete_data_frame_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deleting data.frame columns — delete_data_frame_columns","text":"","code":"delete_data_frame_columns(df, column_names)"},{"path":"http://loelschlaeger.de/oeli/reference/delete_data_frame_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deleting data.frame columns — delete_data_frame_columns","text":"df data.frame. column_names character (vector), name(s) column df group .","code":""},{"path":"http://loelschlaeger.de/oeli/reference/delete_data_frame_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deleting data.frame columns — delete_data_frame_columns","text":"input df without columns defined column_names.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/delete_data_frame_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deleting data.frame columns — delete_data_frame_columns","text":"","code":"df <- data.frame(\"label\" = c(\"A\", \"B\"), \"number\" = 1:10) delete_data_frame_columns(df = df, column_names = \"label\") #>    number #> 1       1 #> 2       2 #> 3       3 #> 4       4 #> 5       5 #> 6       6 #> 7       7 #> 8       8 #> 9       9 #> 10     10 delete_data_frame_columns(df = df, column_names = \"number\") #>    label #> 1      A #> 2      B #> 3      A #> 4      B #> 5      A #> 6      B #> 7      A #> 8      B #> 9      A #> 10     B delete_data_frame_columns(df = df, column_names = c(\"label\", \"number\")) #> data frame with 0 columns and 10 rows"},{"path":"http://loelschlaeger.de/oeli/reference/diff_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Difference and un-difference covariance matrix — diff_cov","title":"Difference and un-difference covariance matrix — diff_cov","text":"functions difference un-difference covariance matrix respect row ref.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/diff_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Difference and un-difference covariance matrix — diff_cov","text":"","code":"diff_cov(cov, ref = 1)  undiff_cov(cov_diff, ref = 1)  delta(ref = 1, dim)"},{"path":"http://loelschlaeger.de/oeli/reference/diff_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Difference and un-difference covariance matrix — diff_cov","text":"cov, cov_diff (differenced) covariance matrix dimension dim (dim - 1, respectively). ref integer 1 dim, reference row differencing maps cov cov_diff, see details. default, ref = 1. dim integer, dimension.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/diff_cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Difference and un-difference covariance matrix — diff_cov","text":"(differenced un-differenced) covariance matrix.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/diff_cov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Difference and un-difference covariance matrix — diff_cov","text":"differencing: Let \\(\\Sigma\\) covariance matrix dimension \\(n\\). $$\\tilde{\\Sigma} = \\Delta_k \\Sigma \\Delta_k'$$ differenced covariance matrix respect row \\(k = 1,\\dots,n\\), \\(\\Delta_k\\) difference operator depends reference row \\(k\\). precise, \\(\\Delta_k\\) identity matrix dimension \\(n\\) without row \\(k\\) \\(-1\\)s column \\(k\\). can computed delta(ref = k, dim = n). un-differencing: \"un-differenced\" covariance matrix \\(\\Sigma\\) uniquely computed \\(\\tilde{\\Sigma}\\). non-unique solution, add column row zeros column row number \\(k\\) \\(\\tilde{\\Sigma}\\), respectively, add \\(1\\) matrix entry make result proper covariance matrix.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/diff_cov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Difference and un-difference covariance matrix — diff_cov","text":"","code":"n <- 3 Sigma <- sample_covariance_matrix(dim = n) k <- 2  # build difference operator delta(ref = k, dim = n) #>      [,1] [,2] [,3] #> [1,]    1   -1    0 #> [2,]    0   -1    1  # difference Sigma (Sigma_diff <- diff_cov(Sigma, ref = k)) #>           [,1]      [,2] #> [1,]  1.412881  24.73751 #> [2,] 24.737513 545.15062  # un-difference Sigma undiff_cov(Sigma_diff, ref = k) #>           [,1] [,2]      [,3] #> [1,]  2.412881    1  25.73751 #> [2,]  1.000000    1   1.00000 #> [3,] 25.737513    1 546.15062"},{"path":"http://loelschlaeger.de/oeli/reference/dmvnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute density of multivariate normal distribution — dmvnorm","title":"Compute density of multivariate normal distribution — dmvnorm","text":"function computes density multivariate normal distribution.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/dmvnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute density of multivariate normal distribution — dmvnorm","text":"","code":"dmvnorm(x, mean, Sigma, log = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/dmvnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute density of multivariate normal distribution — dmvnorm","text":"x numeric, quantile vector length p. mean numeric, mean vector length p. Sigma matrix, covariance matrix dimension p x p. log logical, TRUE logarithm density value returned. default, log = FALSE.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/dmvnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute density of multivariate normal distribution — dmvnorm","text":"numeric, density value.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/dmvnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute density of multivariate normal distribution — dmvnorm","text":"","code":"x <- c(0, 0) mean <- c(0, 0) Sigma <- diag(2) dmvnorm(x = x, mean = mean, Sigma = Sigma) #> [1] 0.1591549 dmvnorm(x = x, mean = mean, Sigma = Sigma, log = TRUE) #> [1] -1.837877"},{"path":"http://loelschlaeger.de/oeli/reference/dmvnorm_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute density of multivariate normal distribution — dmvnorm_cpp","title":"Compute density of multivariate normal distribution — dmvnorm_cpp","text":"function computes density multivariate normal distribution.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/dmvnorm_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute density of multivariate normal distribution — dmvnorm_cpp","text":"","code":"dmvnorm_cpp(x, mean, Sigma, log = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/dmvnorm_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute density of multivariate normal distribution — dmvnorm_cpp","text":"x numeric, quantile vector length p. mean numeric, mean vector length p. Sigma matrix, covariance matrix dimension p x p. log logical, TRUE logarithm density value returned. default, log = FALSE.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/dmvnorm_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute density of multivariate normal distribution — dmvnorm_cpp","text":"numeric, density value.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/dmvnorm_cpp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute density of multivariate normal distribution — dmvnorm_cpp","text":"function performs input checks. See dmvnorm version input checks.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/do.call_timed.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure computation time — do.call_timed","title":"Measure computation time — do.call_timed","text":"function measures computation time .call call.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/do.call_timed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure computation time — do.call_timed","text":"","code":"do.call_timed(what, args, units = \"secs\")"},{"path":"http://loelschlaeger.de/oeli/reference/do.call_timed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure computation time — do.call_timed","text":"Passed .call. args Passed .call. units Passed difftime.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/do.call_timed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measure computation time — do.call_timed","text":"list two elements \"result\" (results .call call) \"time\" (computation time).","code":""},{"path":"http://loelschlaeger.de/oeli/reference/do.call_timed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Measure computation time — do.call_timed","text":"function wrapper .call.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/do.call_timed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure computation time — do.call_timed","text":"","code":"if (FALSE) { what <- function(s) {   Sys.sleep(s)   return(s) } args <- list(s = 1) do.call_timed(what = what, args = args) }"},{"path":"http://loelschlaeger.de/oeli/reference/dwishart.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute density of (Inverse-) Wishart distribution — dwishart","title":"Compute density of (Inverse-) Wishart distribution — dwishart","text":"function computes density (Inverse-) Wishart distribution.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/dwishart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute density of (Inverse-) Wishart distribution — dwishart","text":"","code":"dwishart(x, df, scale, log = FALSE, inv = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/dwishart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute density of (Inverse-) Wishart distribution — dwishart","text":"x matrix, covariance matrix dimension p x p. df integer, degrees freedom. Must greater equal p. scale matrix, scale matrix dimension p x p. Must covariance matrix. log logical, TRUE logarithm density value returned. default, log = FALSE. inv logical, TRUE density Inverse-Wishart distribution returned. default, inv = FALSE.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/dwishart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute density of (Inverse-) Wishart distribution — dwishart","text":"numeric, density value.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/dwishart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute density of (Inverse-) Wishart distribution — dwishart","text":"","code":"x <- diag(2) df <- 4 scale <- diag(2) dwishart(x = x, df = df, scale = scale) #> [1] 0.01463746 dwishart(x = x, df = df, scale = scale, log = TRUE) #> [1] -4.224171 dwishart(x = x, df = df, scale = scale, inv = TRUE) #> [1] 0.01463746"},{"path":"http://loelschlaeger.de/oeli/reference/dwishart_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute density of (Inverse-) Wishart distribution — dwishart_cpp","title":"Compute density of (Inverse-) Wishart distribution — dwishart_cpp","text":"function computes density (Inverse-) Wishart distribution.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/dwishart_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute density of (Inverse-) Wishart distribution — dwishart_cpp","text":"","code":"dwishart_cpp(x, df, scale, log = FALSE, inv = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/dwishart_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute density of (Inverse-) Wishart distribution — dwishart_cpp","text":"x matrix, covariance matrix dimension p x p. df integer, degrees freedom. Must greater equal p. scale matrix, scale matrix dimension p x p. Must covariance matrix. log logical, TRUE logarithm density value returned. default, log = FALSE. inv logical, TRUE density Inverse-Wishart distribution returned. default, inv = FALSE.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/dwishart_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute density of (Inverse-) Wishart distribution — dwishart_cpp","text":"numeric, density value.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/dwishart_cpp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute density of (Inverse-) Wishart distribution — dwishart_cpp","text":"function performs input checks. See dwishart version input checks.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/find_closest_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the closest year to a given date — find_closest_year","title":"Find the closest year to a given date — find_closest_year","text":"function takes date input returns closest year.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/find_closest_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the closest year to a given date — find_closest_year","text":"","code":"find_closest_year(date)"},{"path":"http://loelschlaeger.de/oeli/reference/find_closest_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the closest year to a given date — find_closest_year","text":"date date format \"YYYY-MM-DD\".","code":""},{"path":"http://loelschlaeger.de/oeli/reference/find_closest_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the closest year to a given date — find_closest_year","text":"integer, closest year input date.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/find_closest_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the closest year to a given date — find_closest_year","text":"","code":"find_closest_year(as.Date(\"2022-07-15\")) #> [1] 2023 find_closest_year(as.Date(\"2022-01-01\")) #> [1] 2022"},{"path":"http://loelschlaeger.de/oeli/reference/function_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Get function arguments — function_arguments","title":"Get function arguments — function_arguments","text":"function returns names function arguments.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/function_arguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get function arguments — function_arguments","text":"","code":"function_arguments(f, with_default = TRUE, with_ellipsis = TRUE)"},{"path":"http://loelschlaeger.de/oeli/reference/function_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get function arguments — function_arguments","text":"f function. with_default Either TRUE include function arguments default values, FALSE else. with_ellipsis Either TRUE include \"...\" argument present, FALSE else.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/function_arguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get function arguments — function_arguments","text":"character vector.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/function_arguments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get function arguments — function_arguments","text":"","code":"f <- function(a, b = 1, c = \"\", ...) { } function_arguments(f) #> [1] \"a\"   \"b\"   \"c\"   \"...\" function_arguments(f, with_default = FALSE) #> [1] \"a\"   \"...\" function_arguments(f, with_ellipsis = FALSE) #> [1] \"a\" \"b\" \"c\""},{"path":"http://loelschlaeger.de/oeli/reference/function_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract function body — function_body","title":"Extract function body — function_body","text":"function extracts body function single character.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/function_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract function body — function_body","text":"","code":"function_body(fun, braces = FALSE, nchar = getOption(\"width\") - 4)"},{"path":"http://loelschlaeger.de/oeli/reference/function_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract function body — function_body","text":"fun function. braces Either FALSE (default) remove \"{\" \"}\" start end (), TRUE . nchar integer, maximum number characters abbreviation. Must least 3. default, nchar = getOption(\"width\") - 4.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/function_body.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract function body — function_body","text":"character, body f.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/function_body.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract function body — function_body","text":"","code":"fun <- mean.default function_body(fun) #> [1] \"if (!is.numeric(x) && !is.complex(x) && !is.logical(x)) { warning(\\\"argume...\" function_body(fun, braces = TRUE) #> [1] \"{ if (!is.numeric(x) && !is.complex(x) && !is.logical(x)) { warning(\\\"argu...\" function_body(fun, nchar = 30) #> [1] \"if (!is.numeric(x) && !is.c...\""},{"path":"http://loelschlaeger.de/oeli/reference/function_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default function arguments — function_defaults","title":"Get default function arguments — function_defaults","text":"function returns default function arguments ().","code":""},{"path":"http://loelschlaeger.de/oeli/reference/function_defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default function arguments — function_defaults","text":"","code":"function_defaults(f, exclude = NULL)"},{"path":"http://loelschlaeger.de/oeli/reference/function_defaults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get default function arguments — function_defaults","text":"f function. exclude character argument names exclude. Can NULL (default) exclude argument names.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/function_defaults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default function arguments — function_defaults","text":"named list.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/function_defaults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get default function arguments — function_defaults","text":"","code":"f <- function(a, b = 1, c = \"\", ...) { } function_defaults(f) #> $b #> [1] 1 #>  #> $c #> [1] \"\" #>  function_defaults(f, exclude = \"b\") #> $c #> [1] \"\" #>"},{"path":"http://loelschlaeger.de/oeli/reference/group_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Grouping of a data.frame — group_data_frame","title":"Grouping of a data.frame — group_data_frame","text":"function groups data.frame according values one column.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/group_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grouping of a data.frame — group_data_frame","text":"","code":"group_data_frame(df, by, keep_by = TRUE)"},{"path":"http://loelschlaeger.de/oeli/reference/group_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grouping of a data.frame — group_data_frame","text":"df data.frame. character, name column df group . keep_by Either TRUE (default) keep grouping column , FALSE, else.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/group_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grouping of a data.frame — group_data_frame","text":"list data.frames, subsets df.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/group_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grouping of a data.frame — group_data_frame","text":"","code":"df <- data.frame(\"label\" = c(\"A\", \"B\"), \"number\" = 1:10) group_data_frame(df = df, by = \"label\") #> $A #>   label number #> 1     A      1 #> 3     A      3 #> 5     A      5 #> 7     A      7 #> 9     A      9 #>  #> $B #>    label number #> 2      B      2 #> 4      B      4 #> 6      B      6 #> 8      B      8 #> 10     B     10 #>  group_data_frame(df = df, by = \"label\", keep_by = FALSE) #> $A #>   number #> 1      1 #> 3      3 #> 5      5 #> 7      7 #> 9      9 #>  #> $B #>    number #> 2       2 #> 4       4 #> 6       6 #> 8       8 #> 10     10 #>"},{"path":"http://loelschlaeger.de/oeli/reference/insert_matrix_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a column to a matrix — insert_matrix_column","title":"Add a column to a matrix — insert_matrix_column","text":"function adds column matrix.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/insert_matrix_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a column to a matrix — insert_matrix_column","text":"","code":"insert_matrix_column(A, x, p)"},{"path":"http://loelschlaeger.de/oeli/reference/insert_matrix_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a column to a matrix — insert_matrix_column","text":"matrix. x numeric vector length nrow(), column added. p integer, position add column: p = 0 appends column left p = ncol() appends column right p = n inserts column n-th (n + 1)-th column .","code":""},{"path":"http://loelschlaeger.de/oeli/reference/insert_matrix_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a column to a matrix — insert_matrix_column","text":"matrix.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/insert_matrix_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a column to a matrix — insert_matrix_column","text":"","code":"A <- diag(3) x <- numeric(3) insert_matrix_column(A, x, 0) #>      [,1] [,2] [,3] [,4] #> [1,]    0    1    0    0 #> [2,]    0    0    1    0 #> [3,]    0    0    0    1 insert_matrix_column(A, x, 1) #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #> [2,]    0    0    1    0 #> [3,]    0    0    0    1 insert_matrix_column(A, x, 2) #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #> [2,]    0    1    0    0 #> [3,]    0    0    0    1 insert_matrix_column(A, x, 3) #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #> [2,]    0    1    0    0 #> [3,]    0    0    1    0"},{"path":"http://loelschlaeger.de/oeli/reference/match_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Argument matching — match_arg","title":"Argument matching — match_arg","text":"function matches function arguments modified version match.arg.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/match_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Argument matching — match_arg","text":"","code":"match_arg(arg, choices, several.ok = FALSE, none.ok = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/match_arg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Argument matching — match_arg","text":"arg character (vector), function argument. choices character (vector) allowed values arg. several.ok Either TRUE arg allowed one element, FALSE else. none.ok Either TRUE arg allowed zero elements, FALSE else.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/match_arg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Argument matching — match_arg","text":"un-abbreviated version exact unique partial match one. Otherwise, error signaled several.ok FALSE none.ok FALSE. several.ok TRUE (least) one element arg match, un-abbreviated versions matches returned. none.ok TRUE arg zero elements, character(0) returned.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/match_numerics.html","id":null,"dir":"Reference","previous_headings":"","what":"Best-possible match of two numeric vectors — match_numerics","title":"Best-possible match of two numeric vectors — match_numerics","text":"function matches indices two numeric vectors good possible (means smallest possible sum deviations).","code":""},{"path":"http://loelschlaeger.de/oeli/reference/match_numerics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Best-possible match of two numeric vectors — match_numerics","text":"","code":"match_numerics(x, y)"},{"path":"http://loelschlaeger.de/oeli/reference/match_numerics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Best-possible match of two numeric vectors — match_numerics","text":"x numeric vector. y Another numeric vector length x.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/match_numerics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Best-possible match of two numeric vectors — match_numerics","text":"integer vector length length(x) positions y x.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/match_numerics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Best-possible match of two numeric vectors — match_numerics","text":"","code":"x <- c(-1, 0, 1) y <- c(0.1, 1.5, -1.2) match_numerics(x, y) #> [1] 2 3 1"},{"path":"http://loelschlaeger.de/oeli/reference/matrix_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get matrix indices — matrix_indices","title":"Get matrix indices — matrix_indices","text":"function returns matrix indices character.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/matrix_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get matrix indices — matrix_indices","text":"","code":"matrix_indices(x, prefix = \"\", exclude_diagonal = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/matrix_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get matrix indices — matrix_indices","text":"x matrix. prefix character prefix indices. exclude_diagonal Either TRUE exclude indices row equals column, FALSE include .","code":""},{"path":"http://loelschlaeger.de/oeli/reference/matrix_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get matrix indices — matrix_indices","text":"character  vector.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/matrix_indices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get matrix indices — matrix_indices","text":"","code":"M <- diag(3) matrix_indices(M) #> [1] \"11\" \"21\" \"31\" \"12\" \"22\" \"32\" \"13\" \"23\" \"33\" matrix_indices(M, \"M_\") #> [1] \"M_11\" \"M_21\" \"M_31\" \"M_12\" \"M_22\" \"M_32\" \"M_13\" \"M_23\" \"M_33\" matrix_indices(M, \"M_\", TRUE) #> [1] \"M_21\" \"M_31\" \"M_12\" \"M_32\" \"M_13\" \"M_23\""},{"path":"http://loelschlaeger.de/oeli/reference/merge_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge named lists — merge_lists","title":"Merge named lists — merge_lists","text":"function merges lists based element names. Elements included final output list, former list contributed element name.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/merge_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge named lists — merge_lists","text":"","code":"merge_lists(...)"},{"path":"http://loelschlaeger.de/oeli/reference/merge_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge named lists — merge_lists","text":"... One named list(s).","code":""},{"path":"http://loelschlaeger.de/oeli/reference/merge_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge named lists — merge_lists","text":"list.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/merge_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge named lists — merge_lists","text":"","code":"merge_lists(list(\"a\" = 1, \"b\" = 2), list(\"b\" = 3, \"c\" = 4, \"d\" = NULL)) #> $a #> [1] 1 #>  #> $b #> [1] 2 #>  #> $c #> [1] 4 #>  #> $d #> NULL #>"},{"path":"http://loelschlaeger.de/oeli/reference/oeli-package.html","id":null,"dir":"Reference","previous_headings":"","what":"oeli: My Utilities for Developing Data Science Software — oeli-package","title":"oeli: My Utilities for Developing Data Science Software — oeli-package","text":"general helper functions maybe others find useful developing data science software. Functionality includes argument validation, density calculation, sampling, matrix printing, user interaction, storage helpers . vignettes illustrate use cases.","code":""},{"path":[]},{"path":"http://loelschlaeger.de/oeli/reference/oeli-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"oeli: My Utilities for Developing Data Science Software — oeli-package","text":"Maintainer: Lennart Oelschläger oelschlaeger.lennart@gmail.com","code":""},{"path":"http://loelschlaeger.de/oeli/reference/permutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Build permutations — permutations","title":"Build permutations — permutations","text":"function creates permutations given vector.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/permutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build permutations — permutations","text":"","code":"permutations(x)"},{"path":"http://loelschlaeger.de/oeli/reference/permutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build permutations — permutations","text":"x vector.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/permutations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build permutations — permutations","text":"list permutations x.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/permutations.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Build permutations — permutations","text":"Modified version https://stackoverflow.com//20199902/15157768.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/permutations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build permutations — permutations","text":"","code":"permutations(1:3) #> [[1]] #> [1] 1 2 3 #>  #> [[2]] #> [1] 1 3 2 #>  #> [[3]] #> [1] 2 1 3 #>  #> [[4]] #> [1] 2 3 1 #>  #> [[5]] #> [1] 3 1 2 #>  #> [[6]] #> [1] 3 2 1 #>  permutations(LETTERS[1:3]) #> [[1]] #> [1] \"A\" \"B\" \"C\" #>  #> [[2]] #> [1] \"A\" \"C\" \"B\" #>  #> [[3]] #> [1] \"B\" \"A\" \"C\" #>  #> [[4]] #> [1] \"B\" \"C\" \"A\" #>  #> [[5]] #> [1] \"C\" \"A\" \"B\" #>  #> [[6]] #> [1] \"C\" \"B\" \"A\" #>"},{"path":"http://loelschlaeger.de/oeli/reference/print_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Print (abbreviated) matrix — print_matrix","title":"Print (abbreviated) matrix — print_matrix","text":"function prints (possibly abbreviated) matrix.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/print_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print (abbreviated) matrix — print_matrix","text":"","code":"print_matrix(   x,   rowdots = 4,   coldots = 4,   digits = 2,   label = NULL,   simplify = FALSE,   details = !simplify )"},{"path":"http://loelschlaeger.de/oeli/reference/print_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print (abbreviated) matrix — print_matrix","text":"x numeric character (vector matrix). rowdots integer, row number replaced .... default, rowdots = 4. coldots integer, column number replaced .... default, coldots = 4. digits integer, number printed decimal places. relevant input x numeric. default, digits = 2. label character, label x. printed simplify = FALSE. default, label = NULL, .e., label. simplify logical, set TRUE simplify output. default, simplify = FALSE. details logical, set TRUE print type dimension x. default, details = !simplify.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/print_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print (abbreviated) matrix — print_matrix","text":"Invisibly returns x.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/print_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Print (abbreviated) matrix — print_matrix","text":"function modified version ramify::pprint().","code":""},{"path":"http://loelschlaeger.de/oeli/reference/print_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print (abbreviated) matrix — print_matrix","text":"","code":"print_matrix(x = 1, label = \"single numeric\") #> single numeric : 1 print_matrix(x = LETTERS[1:26], label = \"letters\") #> letters : character vector of length 26  #> A B C ... Z print_matrix(x = 1:3, coldots = 2) #> double vector of length 3  #> 1 ... 3 print_matrix(x = matrix(rnorm(99), ncol = 1), label = \"single column matrix\") #> single column matrix : 99 x 1 matrix of doubles  #>        [,1] #> [1,]  -0.91 #> [2,]   0.47 #> [3,]   0.36 #> ...     ... #> [99,] -1.68 print_matrix(x = matrix(1:100, nrow = 1), label = \"single row matrix\") #> single row matrix : 1 x 100 matrix of doubles  #>      [,1] [,2] [,3] ... [,100] #> [1,]    1    2    3 ...    100 print_matrix(x = matrix(LETTERS[1:24], ncol = 6), label = \"big matrix\") #> big matrix : 4 x 6 matrix of characters  #>      [,1] [,2] [,3] ... [,6] #> [1,]    A    E    I ...    U #> [2,]    B    F    J ...    V #> [3,]    C    G    K ...    W #> [4,]    D    H    L ...    X print_matrix(x = diag(5), coldots = 2, rowdots = 2, simplify = TRUE) #> [ 1 ... 0; ... ... ...; 0 ... 1 ]"},{"path":"http://loelschlaeger.de/oeli/reference/rdirichlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from Dirichlet distribution — rdirichlet","title":"Draw from Dirichlet distribution — rdirichlet","text":"function draws Dirichlet distribution.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rdirichlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from Dirichlet distribution — rdirichlet","text":"","code":"rdirichlet(n = 1, concentration)"},{"path":"http://loelschlaeger.de/oeli/reference/rdirichlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from Dirichlet distribution — rdirichlet","text":"n integer, number samples. concentration non-negative concentration vector length p.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rdirichlet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from Dirichlet distribution — rdirichlet","text":"n = 1 vector length p, else matrix dimension n times p samples rows.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rdirichlet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw from Dirichlet distribution — rdirichlet","text":"","code":"rdirichlet(concentration = 1:3) #> [1] 0.06553434 0.29378029 0.64068537 rdirichlet(n = 4, concentration = 1:2) #>            [,1]      [,2] #> [1,] 0.19053599 0.8094640 #> [2,] 0.34133556 0.6586644 #> [3,] 0.18125249 0.8187475 #> [4,] 0.06185626 0.9381437"},{"path":"http://loelschlaeger.de/oeli/reference/rdirichlet_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from Dirichlet distribution — rdirichlet_cpp","title":"Draw from Dirichlet distribution — rdirichlet_cpp","text":"function draws Dirichlet distribution.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rdirichlet_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from Dirichlet distribution — rdirichlet_cpp","text":"","code":"rdirichlet_cpp(concentration)"},{"path":"http://loelschlaeger.de/oeli/reference/rdirichlet_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from Dirichlet distribution — rdirichlet_cpp","text":"concentration non-negative concentration vector length p.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rdirichlet_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from Dirichlet distribution — rdirichlet_cpp","text":"column vector length p, random draw.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rdirichlet_cpp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw from Dirichlet distribution — rdirichlet_cpp","text":"function performs input checks. See rdirichlet version input checks.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/renv_development_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Using development packages when working with {renv} — renv_development_packages","title":"Using development packages when working with {renv} — renv_development_packages","text":"function creates file loads development packages {renv} can detect write lockfile.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/renv_development_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using development packages when working with {renv} — renv_development_packages","text":"","code":"renv_development_packages(   packages = c(\"covr\", \"devtools\", \"DT\", \"markdown\", \"R.utils\", \"yaml\"),   file_name = \"development_packages\" )"},{"path":"http://loelschlaeger.de/oeli/reference/renv_development_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using development packages when working with {renv} — renv_development_packages","text":"packages character vector package names. file_name single character, name .R file.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/renv_development_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using development packages when working with {renv} — renv_development_packages","text":"return value, writes file project root adds entry .Rbuildignore file.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rmvnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from multivariate normal distribution — rmvnorm","title":"Draw from multivariate normal distribution — rmvnorm","text":"function draws multivariate normal distribution.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rmvnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from multivariate normal distribution — rmvnorm","text":"","code":"rmvnorm(n = 1, mean, Sigma, log = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/rmvnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from multivariate normal distribution — rmvnorm","text":"n integer, number samples. mean numeric, mean vector length p. Sigma matrix, covariance matrix dimension p x p. log logical, TRUE draw taken log-normal distribution. default, log = FALSE.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rmvnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from multivariate normal distribution — rmvnorm","text":"n = 1 vector length p, else matrix dimension n times p samples rows.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rmvnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw from multivariate normal distribution — rmvnorm","text":"","code":"mean <- c(0, 0) Sigma <- diag(2) rmvnorm(n = 3, mean = mean, Sigma = Sigma) #>            [,1]       [,2] #> [1,] -1.3051170 -0.9449121 #> [2,]  0.4543416 -0.8552025 #> [3,] -0.2868952  0.8949616 rmvnorm(mean = mean, Sigma = Sigma, log = TRUE) #> [1] 1.0696211 0.8498662"},{"path":"http://loelschlaeger.de/oeli/reference/rmvnorm_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from multivariate normal distribution — rmvnorm_cpp","title":"Draw from multivariate normal distribution — rmvnorm_cpp","text":"function draws multivariate normal distribution.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rmvnorm_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from multivariate normal distribution — rmvnorm_cpp","text":"","code":"rmvnorm_cpp(mean, Sigma, log = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/rmvnorm_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from multivariate normal distribution — rmvnorm_cpp","text":"mean numeric, mean vector length p. Sigma matrix, covariance matrix dimension p x p. log logical, TRUE draw taken log-normal distribution. default, log = FALSE.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rmvnorm_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from multivariate normal distribution — rmvnorm_cpp","text":"column vector length p, random draw.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rmvnorm_cpp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw from multivariate normal distribution — rmvnorm_cpp","text":"function builds upon following fact: \\(\\epsilon = (\\epsilon_1,\\dots,\\epsilon_p)\\), \\(\\epsilon_i\\) drawn independently standard normal distribution, \\(\\mu + L\\epsilon\\) draw \\(p\\)-variate normal distribution \\(N(\\mu,\\Sigma)\\), \\(L\\) lower triangular factor Choleski decomposition \\(\\Sigma\\). function performs input checks. See rmvnorm version input checks.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rtnorm_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from univariate truncated normal — rtnorm_cpp","title":"Draw from univariate truncated normal — rtnorm_cpp","text":"rtnorm_cpp draws one-sided truncated univariate normal distribution. rttnorm_cpp draws two-sided truncated univariate normal distribution.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rtnorm_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from univariate truncated normal — rtnorm_cpp","text":"","code":"rtnorm_cpp(mean, sd, point, above, log = FALSE)  rttnorm_cpp(mean, sd, lower, upper, log = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/rtnorm_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from univariate truncated normal — rtnorm_cpp","text":"mean numeric, mean. sd numeric, standard deviation. point numeric, truncation point. logical, TRUE truncation FALSE truncation . log logical, TRUE draw taken log-normal distribution. default, log = FALSE. lower numeric, lower truncation point. upper numeric, upper truncation point.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rtnorm_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from univariate truncated normal — rtnorm_cpp","text":"numeric, random draw.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rtnorm_cpp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw from univariate truncated normal — rtnorm_cpp","text":"function performs input checks.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rwishart.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from Wishart distribution — rwishart","title":"Draw from Wishart distribution — rwishart","text":"function draws Wishart Inverse-Wishart distribution.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rwishart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from Wishart distribution — rwishart","text":"","code":"rwishart(df, scale, inv = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/rwishart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from Wishart distribution — rwishart","text":"df integer, degrees freedom. Must greater equal p. scale matrix, scale matrix dimension p x p. Must covariance matrix. inv logical, TRUE density Inverse-Wishart distribution returned. default, inv = FALSE.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rwishart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from Wishart distribution — rwishart","text":"matrix, random draw.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rwishart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw from Wishart distribution — rwishart","text":"","code":"df <- 4 scale <- diag(2) rwishart(df = df, scale = scale) #>           [,1]      [,2] #> [1,]  2.013064 -1.466693 #> [2,] -1.466693  1.716786 rwishart(df = df, scale = scale, inv = TRUE) #>            [,1]       [,2] #> [1,]  7.1112415 -0.6361292 #> [2,] -0.6361292  0.4443588"},{"path":"http://loelschlaeger.de/oeli/reference/rwishart_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from Wishart distribution — rwishart_cpp","title":"Draw from Wishart distribution — rwishart_cpp","text":"function draws Wishart Inverse-Wishart distribution.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rwishart_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from Wishart distribution — rwishart_cpp","text":"","code":"rwishart_cpp(df, scale, inv = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/rwishart_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from Wishart distribution — rwishart_cpp","text":"df integer, degrees freedom. Must greater equal p. scale matrix, scale matrix dimension p x p. Must covariance matrix. inv logical, TRUE density Inverse-Wishart distribution returned. default, inv = FALSE.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rwishart_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from Wishart distribution — rwishart_cpp","text":"matrix, random draw.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/rwishart_cpp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw from Wishart distribution — rwishart_cpp","text":"Wishart distribution generalization multiple dimensions gamma distributions draws space covariance matrices. expectation df * scale, variance increases df values scale. function performs input checks. See rwishart version input checks.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/sample_covariance_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample covariance matrix — sample_covariance_matrix","title":"Sample covariance matrix — sample_covariance_matrix","text":"function samples covariance matrix inverse Wishart distribution.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/sample_covariance_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample covariance matrix — sample_covariance_matrix","text":"","code":"sample_covariance_matrix(dim, df = dim, scale = diag(dim), diag = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/sample_covariance_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample covariance matrix — sample_covariance_matrix","text":"dim integer, dimension. df integer greater equal dim, degrees freedom inverse Wishart distribution. scale covariance matrix dimension dim, scale matrix inverse Wishart distribution. diag Set TRUE diagonal matrix.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/sample_covariance_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample covariance matrix — sample_covariance_matrix","text":"covariance matrix.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/sample_covariance_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample covariance matrix — sample_covariance_matrix","text":"","code":"sample_covariance_matrix(dim = 3) #>           [,1]      [,2]      [,3] #> [1,]  28.49423 -19.30308  23.75784 #> [2,] -19.30308  14.88355 -17.70274 #> [3,]  23.75784 -17.70274  21.92289"},{"path":"http://loelschlaeger.de/oeli/reference/sample_transition_probability_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample transition probability matrices — sample_transition_probability_matrix","title":"Sample transition probability matrices — sample_transition_probability_matrix","text":"function returns random, squared matrix dimension dim fulfills properties transition probability matrix.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/sample_transition_probability_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample transition probability matrices — sample_transition_probability_matrix","text":"","code":"sample_transition_probability_matrix(dim, state_persistent = TRUE)"},{"path":"http://loelschlaeger.de/oeli/reference/sample_transition_probability_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample transition probability matrices — sample_transition_probability_matrix","text":"dim integer, matrix dimension. state_persistent Set TRUE (default) put probability diagonal.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/sample_transition_probability_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample transition probability matrices — sample_transition_probability_matrix","text":"transition probability matrix.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/sample_transition_probability_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample transition probability matrices — sample_transition_probability_matrix","text":"","code":"sample_transition_probability_matrix(dim = 3) #>           [,1]       [,2]       [,3] #> [1,] 0.4990078 0.27781101 0.22318117 #> [2,] 0.3406494 0.64469968 0.01465091 #> [3,] 0.2082100 0.06884191 0.72294813"},{"path":"http://loelschlaeger.de/oeli/reference/simulate_markov_chain.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Markov chain — simulate_markov_chain","title":"Simulate Markov chain — simulate_markov_chain","text":"function simulates Markov chain.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/simulate_markov_chain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Markov chain — simulate_markov_chain","text":"","code":"simulate_markov_chain(Gamma, T, delta = stationary_distribution(Gamma))"},{"path":"http://loelschlaeger.de/oeli/reference/simulate_markov_chain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Markov chain — simulate_markov_chain","text":"Gamma transition probability matrix. T integer, length Markov chain. delta numeric probability vector, initial distribution. specified, delta set stationary distribution Gamma.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/simulate_markov_chain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Markov chain — simulate_markov_chain","text":"numeric vector length T states.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/simulate_markov_chain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Markov chain — simulate_markov_chain","text":"","code":"Gamma <- sample_transition_probability_matrix(dim = 3) simulate_markov_chain(Gamma = Gamma, T = 10) #>  [1] 2 2 2 2 2 2 2 2 2 2"},{"path":"http://loelschlaeger.de/oeli/reference/stationary_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Stationary distribution — stationary_distribution","title":"Stationary distribution — stationary_distribution","text":"function computes stationary distribution corresponding transition probability matrix.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/stationary_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stationary distribution — stationary_distribution","text":"","code":"stationary_distribution(tpm, soft_fail = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/stationary_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stationary distribution — stationary_distribution","text":"tpm transition probability matrix. soft_fail Either TRUE return discrete uniform distribution computation stationary distribution fails reason, FALSE throw error.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/stationary_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stationary distribution — stationary_distribution","text":"numeric vector.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/stationary_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stationary distribution — stationary_distribution","text":"","code":"tpm <- matrix(0.05, nrow = 3, ncol = 3) diag(tpm) <- 0.9 stationary_distribution(tpm) #> [1] 0.3333333 0.3333333 0.3333333"},{"path":"http://loelschlaeger.de/oeli/reference/system_information.html","id":null,"dir":"Reference","previous_headings":"","what":"General system level information — system_information","title":"General system level information — system_information","text":"function returns list general system level information.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/system_information.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General system level information — system_information","text":"","code":"system_information()"},{"path":"http://loelschlaeger.de/oeli/reference/system_information.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General system level information — system_information","text":"list elements: maschine, model name device cores, number cores RAM, size RAM OS, operating system r_version, R version used","code":""},{"path":"http://loelschlaeger.de/oeli/reference/timed.html","id":null,"dir":"Reference","previous_headings":"","what":"Interrupt long evaluations — timed","title":"Interrupt long evaluations — timed","text":"function interrupts evaluation certain number seconds. Note limitations documented setTimeLimit.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/timed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interrupt long evaluations — timed","text":"","code":"timed(expression, seconds = Inf, on_time_out = \"silent\")"},{"path":"http://loelschlaeger.de/oeli/reference/timed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interrupt long evaluations — timed","text":"expression R expression evaluated. seconds number seconds. on_time_out Defines action take evaluation time exceeded, either: \"error\" throw error exception \"warning\" return NULL along warning \"silent\" (default) just return NULL","code":""},{"path":"http://loelschlaeger.de/oeli/reference/timed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interrupt long evaluations — timed","text":"value expression , evaluation time exceeded, whatever specified on_time_out.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/timed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interrupt long evaluations — timed","text":"","code":"foo <- function(x) {   for (i in 1:10) Sys.sleep(x / 10)   return(x) } timed(foo(0.5), 1) #> [1] 0.5 timed(foo(1.5), 1) #> [1] 1.5"},{"path":"http://loelschlaeger.de/oeli/reference/try_silent.html","id":null,"dir":"Reference","previous_headings":"","what":"Try an expression silently — try_silent","title":"Try an expression silently — try_silent","text":"function tries execute expr returns string error message execution failed.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/try_silent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Try an expression silently — try_silent","text":"","code":"try_silent(expr)"},{"path":"http://loelschlaeger.de/oeli/reference/try_silent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Try an expression silently — try_silent","text":"expr R expression try.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/try_silent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Try an expression silently — try_silent","text":"Either value expr case failure object class fail, contains error message.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/try_silent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Try an expression silently — try_silent","text":"function wrapper try.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/try_silent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Try an expression silently — try_silent","text":"","code":"if (FALSE) { try_silent(1 + 1) try_silent(1 + \"1\") }"},{"path":"http://loelschlaeger.de/oeli/reference/unexpected_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Handling of an unexpected error — unexpected_error","title":"Handling of an unexpected error — unexpected_error","text":"function reacts unexpected error throwing error linking GitHub issues site request submit issue.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/unexpected_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handling of an unexpected error — unexpected_error","text":"","code":"unexpected_error(   msg = \"We are sorry, an unexpected error occured.\",   issue_link = \"https://github.com/loelschlaeger/oeli/issues\" )"},{"path":"http://loelschlaeger.de/oeli/reference/unexpected_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handling of an unexpected error — unexpected_error","text":"msg character, error message. issue_link character, URL GitHub issues site.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/unexpected_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handling of an unexpected error — unexpected_error","text":"return value, throws error.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/user_confirm.html","id":null,"dir":"Reference","previous_headings":"","what":"User confirmation — user_confirm","title":"User confirmation — user_confirm","text":"function asks interactive question binary question.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/user_confirm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User confirmation — user_confirm","text":"","code":"user_confirm(question = \"Question?\", default = FALSE)"},{"path":"http://loelschlaeger.de/oeli/reference/user_confirm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User confirmation — user_confirm","text":"question character, binary question ask. end question mark. default Either TRUE FALSE (default), default decision.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/user_confirm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User confirmation — user_confirm","text":"Either TRUE FALSE.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/variable_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine variable name — variable_name","title":"Determine variable name — variable_name","text":"function tries determine name variable passed function.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/variable_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine variable name — variable_name","text":"","code":"variable_name(variable, fallback = \"unnamed\")"},{"path":"http://loelschlaeger.de/oeli/reference/variable_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine variable name — variable_name","text":"variable object. fallback character, fallback reason actual variable name (must single character) determined.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/variable_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine variable name — variable_name","text":"character, variable name.","code":""},{"path":"http://loelschlaeger.de/oeli/reference/variable_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine variable name — variable_name","text":"","code":"variable_name(a) #> [1] \"a\" f <- function(x) variable_name(x) f(x = a) #> [1] \"a\""},{"path":"http://loelschlaeger.de/oeli/news/index.html","id":"oeli-041","dir":"Changelog","previous_headings":"","what":"oeli 0.4.1","title":"oeli 0.4.1","text":"CRAN release: 2024-02-24 Removed HMM code plot_sequence() function (really fit package). Added vignettes illustrate use cases.","code":""},{"path":"http://loelschlaeger.de/oeli/news/index.html","id":"oeli-040","dir":"Changelog","previous_headings":"","what":"oeli 0.4.0","title":"oeli 0.4.0","text":"CRAN release: 2024-02-04 Fixed bug checks matrices checking NA, NaN infinite values. Increment RoxygenNote 7.3.0. Added function system_information() returns general system level information. Added functions check_list_of_lists(), test_list_of_lists(), assert_list_of_lists(). Added functions check_numeric_vector(), test_numeric_vector(), assert_numeric_vector(). Fixed bug merge_lists(), NULL elements got erroneously ignored.","code":""},{"path":"http://loelschlaeger.de/oeli/news/index.html","id":"oeli-032","dir":"Changelog","previous_headings":"","what":"oeli 0.3.2","title":"oeli 0.3.2","text":"CRAN release: 2024-01-14 Fixed bug function_arguments().","code":""},{"path":"http://loelschlaeger.de/oeli/news/index.html","id":"oeli-031","dir":"Changelog","previous_headings":"","what":"oeli 0.3.1","title":"oeli 0.3.1","text":"CRAN release: 2023-12-08 Fixed https://github.com/RcppCore/Rcpp/issues/1287.","code":""},{"path":"http://loelschlaeger.de/oeli/news/index.html","id":"oeli-030","dir":"Changelog","previous_headings":"","what":"oeli 0.3.0","title":"oeli 0.3.0","text":"CRAN release: 2023-12-02 Added function check_date() checks input correct date format. Added function find_closest_year() finds closest year given date. Added function match_numerics() matches indices two numeric vectors good possible (means smallest possible sum deviations). Added function simulate_markov_chain() simulates Markov chain. Added function sample_transition_probability_matrix() samples transition probability matrix. Added functions test_covariance_matrix(), test_correlation_matrix(), test_transition_probability_matrix(), test_probability_vector() (“test” version corresponding “assert” functions). Added argument tolerance covariance matrix, correlation matrix, transition probability matrix, probability vector check functions account machine epsilon avoid false positives. Added functions ll_hmm() simulate_hmm() compute log-likelihood simulate data hidden Markov model. Added argument on_time_out function timed() defines action take evaluation time exceeded (error, warning, silent). Added support select identifier = \"\" Index object suppress warnings (unknown identifiers selected) (globally) via $hide_warnings field. Added argument logical Index object combine multiple identifiers either logical logical . Added function unexpected_error() handles unknown error. Added function group_data_frame() groups data.frame according values column. Added function delete_data_frame_columns() deletes columns data.frame. Added function renv_development_packages() creates file loads development packages renv can detect write lockfile. Added function plot_sequence() plots sequence numbers. Renamed Index -> Storage. Initialized package website pkgdown started add vignettes.","code":""},{"path":"http://loelschlaeger.de/oeli/news/index.html","id":"oeli-020","dir":"Changelog","previous_headings":"","what":"oeli 0.2.0","title":"oeli 0.2.0","text":"CRAN release: 2023-11-03 Added function timed() evaluates expression interrupts evaluation defined amount seconds. Added function .call_timed() measures computation time .call() call. Added function try_silent() tries execute expression returns string error message execution failed. Added R6 object Index provides simple indexing interface list elements. Modified basic_package_sticker(): Option add brackets package name, now scales font, function longer exported. Added function function_body() extracts body function. Added function permutation() creates permutations given vector. Added function variable_name() tries determine name variable passed function. Added function function_defaults() returns default function arguments. Added R6 object Dictionary provides simple simple key-value interface. Added function merge_lists() merges lists based element names. Renamed arguments function timed(): expr -> expression, secs -> seconds. Added argument units function .call_timed().","code":""},{"path":"http://loelschlaeger.de/oeli/news/index.html","id":"oeli-010","dir":"Changelog","previous_headings":"","what":"oeli 0.1.0","title":"oeli 0.1.0","text":"CRAN release: 2023-10-23 Initial CRAN submission.","code":""}]
